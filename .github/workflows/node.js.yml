name: First workflow

on:
  push:
    branches: ["main"]
env:
  # read SECRETS from the repo end write it to the variable
  MONGO_DB_USERNAME: ${{ secrets.MONGO_DB_USERNAME }}
jobs:
  build:
    runs-on: ubuntu-latest
    name: Building stage
    outputs:
      custom_output: ${{ steps.message.outputs.something }}

    steps:
      - name: Collect the code
        uses: actions/checkout@v4
      # CASHING dependencies with hashing if there no change in package-lock.json files
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Installing dependencies
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: message
        # ID is needed for reference from next stage
        id: message
        run: echo "something=Hello World" >> "$GITHUB_OUTPUT"
      # Uploading reports https://github.com/actions/upload-artifact
      - run: echo hello > world.txt
      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: world.txt

  testing:
    runs-on: ubuntu-latest
    name: Testing Stage
    needs: build

    steps:
      - name: collect the code
        uses: actions/checkout@v4
      # CASHING dependencies with hashing if there no change in package-lock.json files
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: install dependencies
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test output from build
        run: echo "${{ needs.build.outputs.custom_output }}"
      - name: Testing the code
        run: npm run test

  secrets_testing:
    runs-on: ubuntu-latest
    name: Secrets testing
    needs: testing

    steps:
      - name: collect the code
        uses: actions/checkout@v4
          # CASHING dependencies with hashing if there no change in package-lock.json files
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Secrets is available
        run: echo "${{ secrets.MONGO_DB_USERNAME }}"

  artifacts_check:
    runs-on: ubuntu-latest
    needs: build
    name: Check for artifacts

    steps:
      - name: collect the code
        uses: actions/checkout@v4
      # CASHING dependencies with hashing if there no change in package-lock.json files
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: install dependencies
        run: npm ci
     # DOwnload artifacts from artifacts
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-report
      - name: Display structure of downloaded files
        run: ls -R

  deploy_reusable:
    needs: building
    uses: ./.github/workflows/reusable_code.yml
    with:
      artifacts_any_name: test-report
